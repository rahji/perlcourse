<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Perl Programming Course Materials</title><link>https://rahji.github.io/perlcourse/</link><description>Recent content in Introduction on Perl Programming Course Materials</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://rahji.github.io/perlcourse/index.xml" rel="self" type="application/rss+xml"/><item><title>Course Descriptions</title><link>https://rahji.github.io/perlcourse/docs/instructor/coursedescriptions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rahji.github.io/perlcourse/docs/instructor/coursedescriptions/</guid><description>Course Descriptions I taught this course as “Perl for Programmers” in fall and winter 2001 at the Cambridge Center for Adult Education. That title is a little deceptive since you really didn’t need any programming experience at all to take the class and learn Perl, but that’s the title they had from a previous on-line Perl course that they offered, so we used it. I also taught a course called “Perl Programming” at Brookline Adult &amp;amp; Community Education in 2001.</description></item><item><title>Handouts</title><link>https://rahji.github.io/perlcourse/docs/student/handouts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rahji.github.io/perlcourse/docs/student/handouts/</guid><description>Download the handouts (75K PDF) that students received at the start of each class. They’re also useful as quick reference sheets after the class is over.
Course Outline Operators Formatting Output Executing Scripts Perl Web Resources Common Perl Mistakes File I/O Regular Expressions Reference</description></item><item><title>Instructor Roadmap</title><link>https://rahji.github.io/perlcourse/docs/instructor/roadmap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rahji.github.io/perlcourse/docs/instructor/roadmap/</guid><description>Download the Instructor Roadmap as a Word document. I hate to put a Word document here, but you really need to see it in Outline view. This is Word 6.0/95 format, so it should be fairly easy to open on most computers. Anyway, this is the document that I wrote to guide myself through each day of class. In Word, make sure you choose the “Outline” view.</description></item><item><title>Exercises</title><link>https://rahji.github.io/perlcourse/docs/student/exercises/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rahji.github.io/perlcourse/docs/student/exercises/</guid><description>Download the exercises (114K PDF) that students completed in hands-on half of each class. Each exercise has an Advanced section that’s meant to give students ideas of other things to try if they blast right through the exercise. In most cases, it’s for students who already knew some Perl before signing up for this class.
Exercise 1 – Hello World Exercise 2 – Math / Formatting Output Exercise 3 – Scalars / Getting Input from Users Exercise 4 – Arrays Exercise 5 – More Arrays Exercise 6 – Associative Arrays (Hashes) Exercise 7 – Conditional Statements Exercise 8 – Loops Exercise 9 – File I/O Exercise 10 – Regular Expressions / Pattern Matching Exercise 11 – Final Exercise</description></item><item><title>My Original Notes</title><link>https://rahji.github.io/perlcourse/docs/instructor/notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rahji.github.io/perlcourse/docs/instructor/notes/</guid><description>You may have a hard time understanding these original notes that I wrote when I was proposing a Perl course to the Cambridge Center for Adult Education. It basically lists what I hoped to include in an 8-week course (one day per week). I’m including it here for completeness, but you probably want to look at the outline and roadmap links.
week 1 intro / free / interpreted / influences / perl6 / www / other uses / why environment / installation / requirements / isp command line / chmod / scripts / switches type and run a script perlstyle / documentation / common probs handout break numeric literals / math operators string literals / string operators x .</description></item><item><title>Extra Exercises</title><link>https://rahji.github.io/perlcourse/docs/student/extraexercises/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rahji.github.io/perlcourse/docs/student/extraexercises/</guid><description>If students are really moving along, the extra exercises (42K PDF) have some ideas for more elaborate and practical scripts. Some students continued on with these exercises after the whole workshop ended.
Some of the knowledge required to actually complete these advanced exercises is slightly outside the scope of what’s covered in the rest of the class, but they’re still realistic for a beginner.
Extra Exercise 1 – Temperature Converter Extra Exercise 2 – Playing Cards Extra Exercise 3 – Restaurant Waiting List</description></item><item><title>Outline with Timeline</title><link>https://rahji.github.io/perlcourse/docs/instructor/outline/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rahji.github.io/perlcourse/docs/instructor/outline/</guid><description>This is the same as the course outline I’d give to students except it has the weeks shown. I never really gave this to anyone since I wasn’t sure that the weeks would work out right, but it’s good for an instructor to see, so they know where to stop each week (assuming you’re teaching it in 8 weeks). Also note that the “Talking to the Operating System” section wasn’t of interest to most students (I usually asked in the beginning of the term) so I rarely taught it.</description></item><item><title/><link>https://rahji.github.io/perlcourse/docs/student/outline/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rahji.github.io/perlcourse/docs/student/outline/</guid><description>Introduction Why use Perl? How does it compare to other languages? Where’s it heading? Installation How and where to get Perl The environment in our classroom Other configurations Running a Perl Script Command-line vs. script files Command-line switches Editing and running a script Numbers Numeric literals Arithmetic operators Strings String literals String operators Formatting Output Scalar Variables What are scalars and how are they used? Variable interpolation Getting Input The STDIN predefined filehandle chomp vs.</description></item></channel></rss>